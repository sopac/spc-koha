.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "C4::Form::MessagingPreferences 3pm"
.TH C4::Form::MessagingPreferences 3pm "2012-07-03" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Form::MessagingPreferences \- manage messaging prefernces form
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
In script:
.PP
.Vb 3
\&    use C4::Form::MessagingPreferences;
\&    C4::Form::MessagingPreferences::set_form_value({ borrowernumber => 51 }, $template);
\&    C4::Form::MessagingPreferences::handle_form_action($input, { categorycode => \*(AqCPL\*(Aq }, $template);
.Ve
.PP
In \s-1HTML\s0 template:
.PP
.Vb 1
\&    <!\-\- TMPL_INCLUDE NAME="messaging\-preference\-form.inc" \-\->
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module manages input and output for the messaging preferences form
that is used in the staff patron editor, the staff patron category editor,
and the \s-1OPAC\s0 patron messaging prefereneces form.  It in its current form,
it essentially serves only to eliminate copy-and-paste code, but suggests
at least one approach for reconciling functionality that does mostly
the same thing in staff and \s-1OPAC\s0.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "handle_form_action"
.IX Subsection "handle_form_action"
.Vb 1
\&    C4::Form::MessagingPreferences::handle_form_action($input, { categorycode => \*(AqCPL\*(Aq }, $template, $insert);
.Ve
.PP
Processes \s-1CGI\s0 parameters and updates the target patron or patron category's
preferences.
.PP
\&\f(CW$input\fR is the \s-1CGI\s0 query object.
.PP
\&\f(CW$target_params\fR is a hashref containing either a \f(CW\*(C`categorycode\*(C'\fR key or a \f(CW\*(C`borrowernumber\*(C'\fR key 
identifying the patron or patron category whose messaging preferences are to be updated.
.PP
\&\f(CW$template\fR is the Template::Toolkit object for the response; this routine
adds a settings_updated template variable.
.SS "set_form_values"
.IX Subsection "set_form_values"
.Vb 1
\&    C4::Form::MessagingPreferences::set_form_value({ borrowernumber => 51 }, $template);
.Ve
.PP
Retrieves the messaging preferences for the specified patron or patron category
and fills the corresponding template variables.
.PP
\&\f(CW$target_params\fR is a hashref containing either a \f(CW\*(C`categorycode\*(C'\fR key or a \f(CW\*(C`borrowernumber\*(C'\fR key 
identifying the patron or patron category.
.PP
\&\f(CW$template\fR is the Template::Toolkit object for the response.
.SH "TODO"
.IX Header "TODO"
.IP "Reduce coupling between processing \s-1CGI\s0 parameters and updating the messaging preferences" 4
.IX Item "Reduce coupling between processing CGI parameters and updating the messaging preferences"
.PD 0
.IP "Handle when form input is invalid" 4
.IX Item "Handle when form input is invalid"
.IP "Generalize into a system of form handler clases" 4
.IX Item "Generalize into a system of form handler clases"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
C4::Members::Messaging, \fIadmin/categorie.pl\fR, \fIopac/opac\-messaging.pl\fR, \fImembers/messaging.pl\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
Koha Development Team <http://koha\-community.org/>
.PP
Galen Charlton <galen.charlton@liblime.com> refactoring code by Andrew Moore.
