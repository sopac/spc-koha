.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "C4::Auth_with_ldap 3pm"
.TH C4::Auth_with_ldap 3pm "2012-07-03" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Auth \- Authenticates Koha users
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use C4::Auth_with_ldap;
.Ve
.SH "LDAP Configuration"
.IX Header "LDAP Configuration"
.Vb 5
\&    This module is specific to LDAP authentification. It requires Net::LDAP package and one or more
\&        working LDAP servers.
\&        To use it :
\&           * Modify ldapserver element in KOHA_CONF
\&           * Establish field mapping in <mapping> element.
\&
\&        For example, if your user records are stored according to the inetOrgPerson schema, RFC#2798,
\&        the username would match the "uid" field, and the password should match the "userpassword" field.
\&
\&        Make sure that ALL required fields are populated by your LDAP database (and mapped in KOHA_CONF).  
\&        What are the required fields?  Well, in mysql you can check the database table "borrowers" like this:
\&
\&        mysql> show COLUMNS from borrowers;
\&                +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&                | Field               | Type         | Null | Key | Default | Extra          |
\&                +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&                | borrowernumber      | int(11)      | NO   | PRI | NULL    | auto_increment |
\&                | cardnumber          | varchar(16)  | YES  | UNI | NULL    |                |
\&                | surname             | mediumtext   | NO   |     | NULL    |                |
\&                | firstname           | text         | YES  |     | NULL    |                |
\&                | title               | mediumtext   | YES  |     | NULL    |                |
\&                | othernames          | mediumtext   | YES  |     | NULL    |                |
\&                | initials            | text         | YES  |     | NULL    |                |
\&                | streetnumber        | varchar(10)  | YES  |     | NULL    |                |
\&                | streettype          | varchar(50)  | YES  |     | NULL    |                |
\&                | address             | mediumtext   | NO   |     | NULL    |                |
\&                | address2            | text         | YES  |     | NULL    |                |
\&                | city                | mediumtext   | NO   |     | NULL    |                |
\&                | state               | mediumtext   | YES  |     | NULL    |                |
\&                | zipcode             | varchar(25)  | YES  |     | NULL    |                |
\&                | country             | text         | YES  |     | NULL    |                |
\&                | email               | mediumtext   | YES  |     | NULL    |                |
\&                | phone               | text         | YES  |     | NULL    |                |
\&                | mobile              | varchar(50)  | YES  |     | NULL    |                |
\&                | fax                 | mediumtext   | YES  |     | NULL    |                |
\&                | emailpro            | text         | YES  |     | NULL    |                |
\&                | phonepro            | text         | YES  |     | NULL    |                |
\&                | B_streetnumber      | varchar(10)  | YES  |     | NULL    |                |
\&                | B_streettype        | varchar(50)  | YES  |     | NULL    |                |
\&                | B_address           | varchar(100) | YES  |     | NULL    |                |
\&                | B_address2          | text         | YES  |     | NULL    |                |
\&                | B_city              | mediumtext   | YES  |     | NULL    |                |
\&                | B_state             | mediumtext   | YES  |     | NULL    |                |
\&                | B_zipcode           | varchar(25)  | YES  |     | NULL    |                |
\&                | B_country           | text         | YES  |     | NULL    |                |
\&                | B_email             | text         | YES  |     | NULL    |                |
\&                | B_phone             | mediumtext   | YES  |     | NULL    |                |
\&                | dateofbirth         | date         | YES  |     | NULL    |                |
\&                | branchcode          | varchar(10)  | NO   | MUL |         |                |
\&                | categorycode        | varchar(10)  | NO   | MUL |         |                |
\&                | dateenrolled        | date         | YES  |     | NULL    |                |
\&                | dateexpiry          | date         | YES  |     | NULL    |                |
\&                | gonenoaddress       | tinyint(1)   | YES  |     | NULL    |                |
\&                | lost                | tinyint(1)   | YES  |     | NULL    |                |
\&                | debarred            | date         | YES  |     | NULL    |                |
\&                | debarredcomment     | varchar(255) | YES  |     | NULL    |                |
\&                | contactname         | mediumtext   | YES  |     | NULL    |                |
\&                | contactfirstname    | text         | YES  |     | NULL    |                |
\&                | contacttitle        | text         | YES  |     | NULL    |                |
\&                | guarantorid         | int(11)      | YES  | MUL | NULL    |                |
\&                | borrowernotes       | mediumtext   | YES  |     | NULL    |                |
\&                | relationship        | varchar(100) | YES  |     | NULL    |                |
\&                | ethnicity           | varchar(50)  | YES  |     | NULL    |                |
\&                | ethnotes            | varchar(255) | YES  |     | NULL    |                |
\&                | sex                 | varchar(1)   | YES  |     | NULL    |                |
\&                | password            | varchar(30)  | YES  |     | NULL    |                |
\&                | flags               | int(11)      | YES  |     | NULL    |                |
\&                | userid              | varchar(30)  | YES  | MUL | NULL    |                |
\&                | opacnote            | mediumtext   | YES  |     | NULL    |                |
\&                | contactnote         | varchar(255) | YES  |     | NULL    |                |
\&                | sort1               | varchar(80)  | YES  |     | NULL    |                |
\&                | sort2               | varchar(80)  | YES  |     | NULL    |                |
\&                | altcontactfirstname | varchar(255) | YES  |     | NULL    |                |
\&                | altcontactsurname   | varchar(255) | YES  |     | NULL    |                |
\&                | altcontactaddress1  | varchar(255) | YES  |     | NULL    |                |
\&                | altcontactaddress2  | varchar(255) | YES  |     | NULL    |                |
\&                | altcontactaddress3  | varchar(255) | YES  |     | NULL    |                |
\&                | altcontactstate     | mediumtext   | YES  |     | NULL    |                |
\&                | altcontactzipcode   | varchar(50)  | YES  |     | NULL    |                |
\&                | altcontactcountry   | text         | YES  |     | NULL    |                |
\&                | altcontactphone     | varchar(50)  | YES  |     | NULL    |                |
\&                | smsalertnumber      | varchar(50)  | YES  |     | NULL    |                |
\&                | privacy             | int(11)      | NO   |     | 1       |                |
\&                +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&                66 rows in set (0.00 sec)
\&                Where Null="NO", the field is required.
.Ve
.SH "KOHA_CONF and field mapping"
.IX Header "KOHA_CONF and field mapping"
Example \s-1XML\s0 stanza for \s-1LDAP\s0 configuration in \s-1KOHA_CONF\s0.
.PP
.Vb 10
\& <config>
\&  ...
\&  <useldapserver>1</useldapserver>
\&  <!\-\- LDAP SERVER (optional) \-\->
\&  <ldapserver id="ldapserver">
\&    <hostname>localhost</hostname>
\&    <base>dc=metavore,dc=com</base>
\&    <user>cn=Manager,dc=metavore,dc=com</user>             <!\-\- DN, if not anonymous \-\->
\&    <pass>metavore</pass>          <!\-\- password, if not anonymous \-\->
\&    <replicate>1</replicate>       <!\-\- add new users from LDAP to Koha database \-\->
\&    <update>1</update>             <!\-\- update existing users in Koha database \-\->
\&    <auth_by_bind>0</auth_by_bind> <!\-\- set to 1 to authenticate by binding instead of
\&                                        password comparison, e.g., to use Active Directory \-\->
\&    <principal_name>%s@my_domain.com</principal_name>
\&                                   <!\-\- optional, for auth_by_bind: a printf format to make userPrincipalName from koha userid \-\->
\&    <mapping>                  <!\-\- match koha SQL field names to your LDAP record field names \-\->
\&      <firstname    is="givenname"      ></firstname>
\&      <surname      is="sn"             ></surname>
\&      <address      is="postaladdress"  ></address>
\&      <city         is="l"              >Athens, OH</city>
\&      <zipcode      is="postalcode"     ></zipcode>
\&      <branchcode   is="branch"         >MAIN</branchcode>
\&      <userid       is="uid"            ></userid>
\&      <password     is="userpassword"   ></password>
\&      <email        is="mail"           ></email>
\&      <categorycode is="employeetype"   >PT</categorycode>
\&      <phone        is="telephonenumber"></phone>
\&    </mapping> 
\&  </ldapserver> 
\& </config>
.Ve
.PP
The <mapping> subelements establish the relationship between mysql fields and \s-1LDAP\s0 attributes. The element name
is the column in mysql, with the \*(L"is\*(R" characteristic set to the \s-1LDAP\s0 attribute name.  Optionally, any content
between the element tags is taken as the default value.  In this example, the default categorycode is \*(L"\s-1PT\s0\*(R" (for
patron).
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
Once a user has been accepted by the \s-1LDAP\s0 server, there are several possibilities for how Koha will behave, depending on 
your configuration and the presence of a matching Koha user in your local \s-1DB:\s0
.PP
.Vb 10
\&                         LOCAL_USER
\& OPTION UPDATE REPLICATE  EXISTS?  RESULT
\&   A1      1       1        1      OK : We\*(Aqre updating them anyway.
\&   A2      1       1        0      OK : We\*(Aqre adding them anyway.
\&   B1      1       0        1      OK : We update them.
\&   B2      1       0        0     FAIL: We cannot add new user.
\&   C1      0       1        1      OK : We do nothing.  (maybe should update password?)
\&   C2      0       1        0      OK : We add the new user.
\&   D1      0       0        1      OK : We do nothing.  (maybe should update password?)
\&   D2      0       0        0     FAIL: We cannot add new user.
.Ve
.PP
Note: failure here just means that Koha will fallback to checking the local \s-1DB\s0.  That is, a given user could login with
their \s-1LDAP\s0 password \s-1OR\s0 their local one.  If this is a problem, then you should enable update and supply a mapping for 
password.  Then the local value will be updated at successful \s-1LDAP\s0 login and the passwords will be synced.
.PP
If you choose \s-1NOT\s0 to update local users, the borrowers table will not be affected at all.
Note that this means that patron passwords may appear to change if \s-1LDAP\s0 is ever disabled, because
the local table never contained the \s-1LDAP\s0 values.
.SS "auth_by_bind"
.IX Subsection "auth_by_bind"
Binds as the user instead of retrieving their record.  Recommended if update disabled.
.SS "principal_name"
.IX Subsection "principal_name"
Provides an optional sprintf-style format for manipulating the userid before the bind.
Even though the userPrincipalName is one intended target, any uniquely identifying
attribute that the server allows to be used for binding could be used.
.PP
Currently, principal_name only operates when auth_by_bind is enabled.
.SS "Active Directory"
.IX Subsection "Active Directory"
The auth_by_bind and principal_name settings are recommended for Active Directory.
.PP
Under default Active Directory rules, we cannot determine the distinguishedName attribute from the Koha userid as reliably as
we would typically under openldap.  Instead of:
.PP
.Vb 1
\&    distinguishedName: CN=barnes.7,DC=my_company,DC=com
.Ve
.PP
We might get:
.PP
.Vb 1
\&    distinguishedName: CN=Barnes\e, Jim,OU=Test Accounts,OU=User Accounts,DC=my_company,DC=com
.Ve
.PP
Matching that would require us to know more info about the account (firstname, surname) and to include punctuation and whitespace
in Koha userids.  But the userPrincipalName should be consistent, something like:
.PP
.Vb 1
\&    userPrincipalName: barnes.7@my_company.com
.Ve
.PP
Therefore it is often easier to bind to Active Directory with userPrincipalName, effectively the
canonical email address for that user, or what it would be if email were enabled for them.  If Koha userid values 
will match the username portion of the userPrincipalName, and the domain suffix is the same for all users, then use principal_name
like this:
    <principal_name>%s@core.my_company.com</principal_name>
.PP
The user of the previous example, barnes.7, would then attempt to bind as:
    barnes.7@core.my_company.com
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1\fICGI\s0\fR\|(3)
.PP
\&\fINet::LDAP()\fR
.PP
\&\fIXML::Simple()\fR
.PP
\&\fIDigest::MD5\fR\|(3)
.PP
\&\fIsprintf()\fR
