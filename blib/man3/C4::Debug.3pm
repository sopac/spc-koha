.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "C4::Debug 3pm"
.TH C4::Debug 3pm "2012-07-03" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Debug \- Standardized, centralized, exported debug switches.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use C4::Debug;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The purpose of this module is to centralize some of the \*(L"switches\*(R" that turn debugging
off and on in Koha.  Most often, this functionality will be provided via C4::Context.
C4::Debug is separate to preserve the relatively stable state of Context, and 
because other code will use C4::Debug without invoking Context.
.PP
Although centralization is our intention, 
for logical and security reasons, several approaches to debugging need to be 
kept separate.  Information useful to developers in one area will not necessarily
be useful or even available to developers in another area.
.PP
For example, the designer of template-influenced javascript my want to be able to
trigger javascript's alert function to display certain variable values, to verify
the template selection is being performed correctly.  For this purpose the presence
of a javascript \*(L"debug\*(R" variable might be a good switch.
.PP
Meanwhile, where security coders (say, for \s-1LDAP\s0 Auth) will appreciate low level feedback about
Authentication transactions, an environmental system variable might be a good switch.  
However, clearly we would not want to expose that same information (e.g., entire \s-1LDAP\s0 records)
to the web interface based on a javascript variable (even if it were possible)!
.PP
All that is a long way of saying \s-1THERE\s0 \s-1ARE\s0 \s-1SECURITY\s0 \s-1IMPLICATIONS\s0 to turning on 
debugging in various parts of the system, so don't treat them all the same or confuse them.
.SH "VARIABLES / AREAS"
.IX Header "VARIABLES / AREAS"
.ie n .SS "$debug \- System, general The general purpose debug switch."
.el .SS "\f(CW$debug\fP \- System, general The general purpose debug switch."
.IX Subsection "$debug - System, general The general purpose debug switch."
\fIHow to Set \f(CI$debug:\fI\fR
.IX Subsection "How to Set $debug:"
.IP "environmental variable \s-1DEBUG\s0 or \s-1KOHA_DEBUG\s0.  In bash, you might do:" 4
.IX Item "environmental variable DEBUG or KOHA_DEBUG.  In bash, you might do:"
.Vb 2
\&        export KOHA_DEBUG=1;
\&        perl t/Auth.t;
.Ve
.IP "Keep in mind that your webserver will not be running in the same environment as your shell. However, for development purposes, the same effect can be had by using Apache's \s-1SET_ENV\s0 command with \s-1ERROR_LOG\s0 enabled for your VirtualHost.  Not intended for production systems." 4
.IX Item "Keep in mind that your webserver will not be running in the same environment as your shell. However, for development purposes, the same effect can be had by using Apache's SET_ENV command with ERROR_LOG enabled for your VirtualHost.  Not intended for production systems."
.PD 0
.IP "You can force the value from perl directly, like:" 4
.IX Item "You can force the value from perl directly, like:"
.PD
.Vb 4
\&        use C4::Debug;
\&        use C4::Dates;
\&        BEGIN { $C4::Debug::debug = 1; }
\&        # now any other dependencies that also use C4::Debug will have debugging ON.
.Ve
.ie n .SS "$cgi_debug (\s-1CGI\s0 params) The web-based debug switch."
.el .SS "\f(CW$cgi_debug\fP (\s-1CGI\s0 params) The web-based debug switch."
.IX Subsection "$cgi_debug (CGI params) The web-based debug switch."
\fIHow to Set \f(CI$cgi_debug:\fI\fR
.IX Subsection "How to Set $cgi_debug:"
.IP "From a web browser, for example by supplying a non-zero debug parameter (1 to 9):" 4
.IX Item "From a web browser, for example by supplying a non-zero debug parameter (1 to 9):"
.Vb 1
\&        http://www.mylibrary.org/cgi\-bin/koha/opac\-search.pl?q=history&debug=1
.Ve
.IP "Or in \s-1HTML\s0, add a similar input parameter:" 4
.IX Item "Or in HTML, add a similar input parameter:"
.Vb 1
\&        <input type="hidden" name="debug" value="1" />
.Ve
.IP "Or from shell (or Apache), set \s-1KOHA_CGI_DEBUG\s0." 4
.IX Item "Or from shell (or Apache), set KOHA_CGI_DEBUG."
.PP
The former methods mean \f(CW$cgi_debug\fR is exposed.  Do \s-1NOT\s0 use it to trigger any actions that you would
not allow a (potentially anonymous) end user to perform.  Dumping sensitive data, directory listings, or 
emailing yourself a test message would all be bad actions to tie to \f(CW$cgi_debug\fR.
.SH "OTHER SOURCES of Debug Switches"
.IX Header "OTHER SOURCES of Debug Switches"
.SS "System Preferences"
.IX Subsection "System Preferences"
.SS "Database Debug"
.IX Subsection "Database Debug"
Debugging at the database level might be useful.  Koha does not currently integrate any such 
capability.
.SH "CONVENTIONS"
.IX Header "CONVENTIONS"
Debug values range from 0 to 9.  At zero (the default), debugging is off.
.SH "AUTHOR"
.IX Header "AUTHOR"
Joe Atzberger
atz \s-1AT\s0 liblime \s-1DOT\s0 com
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1\fICGI\s0\fR\|(3)
.PP
C4::Context
