.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "C4::Creators::Template 3pm"
.TH C4::Creators::Template 3pm "2012-07-16" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Creators::Template \- A class for creating and manipulating template objects in Koha
.SH "ABSTRACT"
.IX Header "ABSTRACT"
This module provides methods for creating, retrieving, and otherwise manipulating label template objects used by Koha.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fInew()\fP"
.IX Subsection "new()"
.Vb 2
\&    Invoking the I<new> method constructs a new template object containing the default values for a template.
\&    The following parameters are optionally accepted as key => value pairs:
\&
\&        C<profile_id>           A valid profile id to be assciated with this template. NOTE: The profile must exist in the database and B<not> be assigned to another template.
\&        C<template_code>        A template code. ie. \*(AqAvery 5160 | 1 x 2\-5/8\*(Aq
\&        C<template_desc>        A readable description of the template. ie. \*(Aq3 columns, 10 rows of labels\*(Aq
\&        C<page_width>           The width of the page measured in the units supplied by the units parameter in this template.
\&        C<page_height>          The height of the page measured in the same units.
\&        C<label_width>          The width of a single label on the page this template applies to.
\&        C<label_height>         The height of a single label on the page.
\&        C<top_text_margin>      The measure of the top margin on a single label on the page.
\&        C<left_text_margin>     The measure of the left margin on a single label on the page.
\&        C<top_margin>           The measure of the top margin of the page.
\&        C<left_margin>          The measure of the left margin of the page.
\&        C<cols>                 The number of columns of labels on the page.
\&        C<rows>                 The number of rows of labels on the page.
\&        C<col_gap>              The measure of the gap between the columns of labels on the page.
\&        C<row_gap>              The measure of the gap between the rows of labels on the page.
\&        C<units>                The units of measure used for this template. These B<must> match the measures you supply above or
\&                                bad things will happen to your document. NOTE: The only supported units at present are:
.Ve
.IP ". \s-1POINT\s0   = Postscript Points (This is the base unit in the Koha label creator.)" 9
.IX Item ". POINT   = Postscript Points (This is the base unit in the Koha label creator.)"
.PD 0
.IP ". \s-1AGATE\s0   = Adobe Agates (5.1428571 points per)" 9
.IX Item ". AGATE   = Adobe Agates (5.1428571 points per)"
.IP ". \s-1INCH\s0    = \s-1US\s0 Inches (72 points per)" 9
.IX Item ". INCH    = US Inches (72 points per)"
.IP ". \s-1MM\s0      = \s-1SI\s0 Millimeters (2.83464567 points per)" 9
.IX Item ". MM      = SI Millimeters (2.83464567 points per)"
.IP ". \s-1CM\s0      = \s-1SI\s0 Centimeters (28.3464567 points per)" 9
.IX Item ". CM      = SI Centimeters (28.3464567 points per)"
.PD
.PP
.Vb 2
\&    example:
\&        my $template = Template\->new(); # Creates and returns a new template object with the defaults
\&
\&        my $template = C4::Labels::Template\->new(profile_id => 1, page_width => 8.5, page_height => 11.0, units => \*(AqINCH\*(Aq); # Creates and returns a new template object using
\&            the supplied values to override the defaults
\&
\&    B<NOTE:> This template is I<not> written to the database untill save() is invoked. You have been warned!
.Ve
.ie n .SS "retrieve(template_id => $template_id)"
.el .SS "retrieve(template_id => \f(CW$template_id\fP)"
.IX Subsection "retrieve(template_id => $template_id)"
.Vb 3
\&    Invoking the I<retrieve> method constructs a new template object containing the current values for template_id. The method returns
\&    a new object upon success and \-1 upon failure. Errors are logged to the Apache log. Two further options may be accessed. See the example
\&    below for further description.
\&
\&    examples:
\&
\&        C<my $template = C4::Labels::Template\->retrieve(template_id => 1); # Retrieves template record 1 and returns an object containing the record>
\&
\&        C<my $template = C4::Labels::Template\->retrieve(template_id => 1, convert => 1); # Retrieves template record 1, converts the units to points,
\&            and returns an object containing the record>
\&
\&        C<my $template = C4::Labels::Template\->retrieve(template_id => 1, profile_id => 1); # Retrieves template record 1, converts the units
\&            to points, applies the currently associated profile id, and returns an object containing the record.>
.Ve
.SS "\fIdelete()\fP"
.IX Subsection "delete()"
.Vb 2
\&    Invoking the delete method attempts to delete the template from the database. The method returns \-1 upon failure. Errors are logged to the Apache log.
\&    NOTE: This method may also be called as a function and passed a key/value pair simply deleteing that template from the database. See the example below.
\&
\&    examples:
\&        C<my $exitstat = $template\->delete(); # to delete the record behind the $template object>
\&        C<my $exitstat = C4::Labels::Template::delete(template_id => 1); # to delete template record 1>
.Ve
.SS "\fIsave()\fP"
.IX Subsection "save()"
.Vb 3
\&    Invoking the I<save> method attempts to insert the template into the database if the template is new and update the existing template record if
\&    the template exists. The method returns the new record template_id upon success and \-1 upon failure (This avoids template_ids conflicting with a
\&    record template_id of 1). Errors are logged to the Apache log.
\&
\&    example:
\&        C<my $template_id = $template\->save(); # to save the record behind the $template object>
.Ve
.SS "get_attr($attribute)"
.IX Subsection "get_attr($attribute)"
.Vb 1
\&    Invoking the I<get_attr> method will return the value of the requested attribute or \-1 on errors.
\&
\&    example:
\&        C<my $value = $template\->get_attr($attribute);>
.Ve
.SS "set_attr(attribute => value, attribute_2 => value)"
.IX Subsection "set_attr(attribute => value, attribute_2 => value)"
.Vb 2
\&    Invoking the I<set_attr> method will set the value of the supplied attributes to the supplied values. The method accepts key/value pairs separated by
\&    commas.
\&
\&    example:
\&        C<$template\->set_attr(attribute => value);>
.Ve
.SS "get_label_position($start_label)"
.IX Subsection "get_label_position($start_label)"
.Vb 2
\&    Invoking the I<get_label_position> method will return the row, column coordinates on the starting page and the lower left x,y coordinates on the starting
\&    label for the template object.
\&
\&    examples:
\&        C<my ($row_count, $col_count, $llx, $lly) = $template\->get_label_position($start_label);>
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Nighswonger <cnighswonger \s-1AT\s0 foundations \s-1DOT\s0 edu>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2009 Foundations Bible College.
.SH "LICENSE"
.IX Header "LICENSE"
This file is part of Koha.
.PP
Koha is free software; you can redistribute it and/or modify it under the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later version.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with Koha; if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
Fifth Floor, Boston, \s-1MA\s0 02110\-1301 \s-1USA\s0.
.SH "DISCLAIMER OF WARRANTY"
.IX Header "DISCLAIMER OF WARRANTY"
Koha is distributed in the hope that it will be useful, but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0
A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the \s-1GNU\s0 General Public License for more details.
