.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "C4::VirtualShelves 3pm"
.TH C4::VirtualShelves 3pm "2012-07-03" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::VirtualShelves \- Functions for manipulating Koha virtual shelves
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use C4::VirtualShelves;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides functions for manipulating virtual shelves,
including creating and deleting virtual shelves, and adding and removing
bibs to and from virtual shelves.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "GetShelves"
.IX Subsection "GetShelves"
.Vb 2
\&  ($shelflist, $totshelves) = &GetShelves($category, $row_count, $offset, $owner);
\&  ($shelfnumber, $shelfhash) = each %{$shelflist};
.Ve
.PP
Returns the number of shelves specified by \f(CW$row_count\fR and \f(CW$offset\fR as well as the total
number of shelves that meet the \f(CW$owner\fR and \f(CW$category\fR criteria.  \f(CW$category\fR,
\&\f(CW$row_count\fR, and \f(CW$offset\fR are required. \f(CW$owner\fR must be supplied when \f(CW$category\fR == 1.
When \f(CW$category\fR is 2, supply undef as argument for \f(CW$owner\fR.
.PP
This function is used by shelfpage in VirtualShelves/Page.pm when listing all shelves for lists management in opac or staff client. Order is by shelfname.
.PP
\&\f(CW$shelflist\fRis a reference-to-hash. The keys are the virtualshelves numbers (\f(CW$shelfnumber\fR, above),
and the values (\f(CW$shelfhash\fR, above) are themselves references-to-hash, with the following keys:
.ie n .IP """$shelfhash\->{shelfname}""" 4
.el .IP "\f(CW$shelfhash\->{shelfname}\fR" 4
.IX Item "$shelfhash->{shelfname}"
A string. The name of the shelf.
.ie n .IP """$shelfhash\->{count}""" 4
.el .IP "\f(CW$shelfhash\->{count}\fR" 4
.IX Item "$shelfhash->{count}"
The number of virtuals on that virtualshelves.
.SS "GetAllShelves"
.IX Subsection "GetAllShelves"
.Vb 1
\&    $shelflist = GetAllShelves($category, $owner)
.Ve
.PP
This function returns a reference to an array of hashrefs containing all shelves
sorted by the shelf name.
.PP
This function is intended to return a dataset reflecting all the shelves for
the submitted parameters.
.SS "GetSomeShelfNames"
.IX Subsection "GetSomeShelfNames"
Returns shelf names and numbers for Add to combo of search results and Lists button of \s-1OPAC\s0 header.
.SS "GetShelf"
.IX Subsection "GetShelf"
.Vb 1
\&  (shelfnumber,shelfname,owner,category,sortfield,allow_add,allow_delete_own,allow_delete_other) = &GetShelf($shelfnumber);
.Ve
.PP
Returns the above-mentioned fields for passed virtual shelf number.
.SS "GetShelfContents"
.IX Subsection "GetShelfContents"
.Vb 1
\&  $biblist = &GetShelfContents($shelfnumber);
.Ve
.PP
Looks up information about the contents of virtual virtualshelves number
\&\f(CW$shelfnumber\fR.  Sorted by a field in the biblio table.  copyrightdate 
gives a desc sort.
.PP
Returns a reference-to-array, whose elements are references-to-hash,
as returned by \f(CW\*(C`C4::Biblio::GetBiblioFromItemNumber\*(C'\fR.
.PP
Note: the notforloan status comes from the itemtype, and where it equals 0
it does not ensure that related items.notforloan status is likewise 0. The
caller has to check any items on their own, possibly with CanBookBeIssued
from C4::Circulation.
.SS "AddShelf"
.IX Subsection "AddShelf"
.Vb 1
\&  $shelfnumber = &AddShelf($hashref, $owner);
.Ve
.PP
Creates a new virtual shelf. Params passed in a hash like ModShelf.
.PP
Returns a code to know what's happen.
    * \-1 : if this virtualshelves already exists.
    * \f(CW$shelfnumber\fR : if success.
.SS "AddToShelf"
.IX Subsection "AddToShelf"
.Vb 1
\&  &AddToShelf($biblionumber, $shelfnumber, $borrower);
.Ve
.PP
Adds bib number \f(CW$biblionumber\fR to virtual virtualshelves number
\&\f(CW$shelfnumber\fR, unless that bib is already on that shelf.
.SS "ModShelf"
.IX Subsection "ModShelf"
my \f(CW$result\fR= ModShelf($shelfnumber, \f(CW$hashref\fR)
.PP
Where \f(CW$hashref\fR\->{column} = param
.PP
Modify the value into virtualshelves table with values given 
from hashref, which each key of the hashref should be
the name of a column of virtualshelves.
Fields like shelfnumber or owner cannot be changed.
.PP
Returns 1 if the action seemed to be successful.
.SS "ShelfPossibleAction"
.IX Subsection "ShelfPossibleAction"
ShelfPossibleAction($loggedinuser, \f(CW$shelfnumber\fR, \f(CW$action\fR);
.PP
\&\f(CW\*(C`$loggedinuser,$shelfnumber,$action\*(C'\fR
.PP
\&\f(CW$action\fR can be \*(L"view\*(R", \*(L"add\*(R", \*(L"delete\*(R", \*(L"manage\*(R", \*(L"new_public\*(R", \*(L"new_private\*(R".
Note that add/delete here refers to adding/deleting entries from the list. Deleting the list itself falls under manage.
new_public and new_private refers to creating a new public or private list.
The distinction between deleting your own entries from the list or entries from
others is made in DelFromShelf.
.PP
Returns 1 if the user can do the \f(CW$action\fR in the \f(CW$shelfnumber\fR shelf.
Returns 0 otherwise.
.SS "DelFromShelf"
.IX Subsection "DelFromShelf"
.Vb 1
\&    $result= &DelFromShelf( $bibref, $shelfnumber, $user);
.Ve
.PP
Removes biblionumbers in passed arrayref from shelf \f(CW$shelfnumber\fR.
If the bib wasn't on that virtualshelves to begin with, nothing happens.
.PP
Returns 0 if no items have been deleted.
.SS "DelShelf"
.IX Subsection "DelShelf"
.Vb 1
\&  $Number = DelShelf($shelfnumber);
.Ve
.PP
This function deletes the shelf number, and all of it's content.
Authorization to do so \s-1MUST\s0 have been checked before calling, while using
ShelfPossibleAction with manage parameter.
.SS "GetBibliosShelves"
.IX Subsection "GetBibliosShelves"
This finds all the public lists that this bib record is in.
.SS "ShelvesMax"
.IX Subsection "ShelvesMax"
.Vb 1
\&    $howmany= ShelvesMax($context);
.Ve
.PP
Tells how much shelves are shown in which context.
\&\s-1POPUP\s0 refers to addbybiblionumber popup, \s-1MGRPAGE\s0 is managing page (in opac or
staff), \s-1COMBO\s0 refers to the Add to-combo of search results. \s-1MASTHEAD\s0 is the
main Koha toolbar with Lists button.
.SH "AUTHOR"
.IX Header "AUTHOR"
Koha Development Team <http://koha\-community.org/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIC4::Circulation::Circ2\fR\|(3)
