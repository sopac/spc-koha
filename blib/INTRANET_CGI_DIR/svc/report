#!/usr/bin/perl

# Copyright 2011 Chris Cormack <chris@bigballofwax.co.nz>
#
# This file is part of Koha.
#
# Koha is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# Koha is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# Koha; if not, write to the Free Software Foundation, Inc., 59 Temple Place,
# Suite 330, Boston, MA  02111-1307 USA
#

use strict;
use warnings;

use C4::Auth;
use C4::Reports::Guided;
use JSON;
use CGI;

use Koha::Cache;


my $query  = CGI->new();
my $report_id = $query->param('id');
my $report_name = $query->param('name');

my $cache;
my $sql;
my $type;
my $notes;
my $cache_expiry;
my $public;

my ( $template, $loggedinuser, $cookie ) = get_template_and_user(
    {
        template_name   => "intranet-main.tmpl",
        query           => $query,
        type            => "intranet",
        authnotrequired => 0,
        flagsrequired   => { catalogue => 1, },
    }
);

if (Koha::Cache->is_cache_active) {
    if ($report_name) { # When retrieving by name, we have to hit the
                        # database to get the ID before we can check
                        # the cache. Yuck.
        ( $sql, $type, $report_name, $notes, $cache_expiry, $public, $report_id ) =
            get_saved_report( { 'name' => $report_name } );
    }

    $cache = Koha::Cache->new();
    my $page = $cache->get_from_cache("intranet:report:$report_id");
    if ($page) {
        print $query->header;
        print $page;
        exit;
    }
}

print $query->header;

# $public isnt used for intranet
unless ($sql) {
    ( $sql, $type, $report_name, $notes, $cache_expiry, $public, $report_id ) =
        get_saved_report($report_name ? { 'name' => $report_name } : { 'id' => $report_id } );
}
if ($sql) {
    my $offset = 0;
    my $limit  = C4::Context->preference("SvcMaxReportRows") || 10;
    my ( $sth, $errors ) = execute_query( $sql, $offset, $limit );
    my $lines     = $sth->fetchall_arrayref;
    my $json_text = to_json($lines);
    print $json_text;

    if (Koha::Cache->is_cache_active) {
        $cache->set_in_cache( "intranet:report:$report_id", $json_text, $cache_expiry );
    }
}
